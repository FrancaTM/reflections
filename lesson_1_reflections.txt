How did viewing a diff between two versions of a file help you see the bug that
was introduced?

	Helped in aggregating just the changes made to the file, simplifying the amount of text to be analyzed for possible errors

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

	It helps a lot mainly in terms of developing programming skills and better code writing. After all, writing code as well as learning to write good texts requires a lot of practice and analysis of past work in search of points to improve

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    The advantage of being able to choose when to save something (Git) is much better for you to have control over tasks that were executed (started and completed) without breaking your workflow into intermediate parts. For systems that have the ability to save content automatically, this feature provides greater peace of mind for the user of the tool, especially for backups and avoiding the loss of more complex and time-consuming jobs. The cons of each approach would be, in the case of Git, the possibility of losing a unit of work before the execution of a commit means to lose irreversibly all the work executed, in the case of Google docs, it would be very likely that the functionality automatically ended up making it somewhat difficult to control complete work units, precisely by automatically saving every change made to any file

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

   In the case of Git, one of the reasons could be the optimization and simplification of the process for controlling changed files, since there is a high probability that in a project, several pieces of code and different files will be changed at once. In the case of Google docs would be just the opposite, it is more likely that a single file of interest will be changed and worked at a given time

How can you use the commands git log and git diff to view the history of files?

   The "git log" command will show me the history of all executed commits, as well as their respective descriptions and their commit IDs. Using the "git diff" command passing as arguments the ID's of two sequential commits will allow you to identify all the changes (additions and deletions) made to the current version of the files in relation to their previous versions

How might using version control make you more confident to make changes that
could break something?

   For the reason of creating reference points, through commit's, that allow me to recover previous stable versions to possible bug's inserted in the code

Now that you have your workspace set up, what do you want to try using Git for?

   I want to use Git to manage my portfolio of personal and professional programming projects
